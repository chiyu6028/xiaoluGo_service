<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!--引入配置属性文件 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!--自动扫描含有@Service将其注入为bean -->
    <context:component-scan base-package="com.xiaolu.service" />

    <!-- 调度工厂 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">RenrenScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <!-- 线程池配置 -->
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">20</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <!-- JobStore 配置 -->
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <!-- 集群配置 -->
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
                <prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">1</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">12000</prop>
                <!-- 表前缀 -->
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
            </props>
        </property>
        <property name="schedulerName" value="RenrenScheduler"/>
        <!--延时启动，应用启动完后 QuartzScheduler 再启动 -->
        <property name="startupDelay" value="30"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true"/>
        <!-- 设置自动启动  默认为true-->
        <property name="autoStartup" value="true"/>
    </bean>

    <bean id="jobTask" class="com.xiaolu.quartz.task.JobTask"/>

    <bean id="application" class="com.xiaolu.util.SpringContextTool"/>

    <bean id="chatWebSocketHandler" class="com.xiaolu.websocket.ChatWebSocketHandler" scope="prototype"/>

</beans>